{"version":3,"sources":["Modal/ModalContent/ModalContent.module.css","Input/Input.module.css","Header/Header.module.css","Library/Books/Book/Book.module.css","Library/Library.module.css","Modal/ModalContent/ModelContent.js","Modal/Modal.js","Input/Input.js","Header/Header.js","Library/Books/Book/Book.js","Library/Books/Books.js","Library/Library.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ModalContent","props","ReactDOM","createPortal","className","classes","ModalCover","onClick","event","target","closeModal","ModalArea","ModalClose","ModalBody","children","document","body","Modal","showModal","setState","isShown","state","this","buttonText","addNewBook","onSubmit","Component","input","inputElement","inputtype","InputEle","id","type","name","placeholder","min","required","options","map","option","key","value","Input","Label","htmlFor","label","header","Header","SubmitBtn","Book","title","author","pages","read","changeReadStatusHandler","removeBookHandler","RemoveBtn","Books","books","book","index","library","Library","App","addNewBookHandler","preventDefault","nextBookId","length","push","valueAsNumber","booksId","bookIndex","findIndex","b","Object","assign","slice","splice","bind","Boolean","window","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aa0e4391.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalCover\":\"ModalContent_ModalCover__2fjP5\",\"ModalArea\":\"ModalContent_ModalArea__1rCKu\",\"ModalClose\":\"ModalContent_ModalClose__3iQSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Input_Label__2HyhL\",\"Input\":\"Input_Input__1Mi_0\",\"InputEle\":\"Input_InputEle__1hhjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3Ipkk\",\"SubmitBtn\":\"Header_SubmitBtn__3Gv6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RemoveBtn\":\"Book_RemoveBtn__3b_fq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Library\":\"Library_Library__3JFmO\",\"read\":\"Library_read__1-Kk-\",\"ChangeReadStatus\":\"Library_ChangeReadStatus__29dUB\",\"Remove\":\"Library_Remove__2PPqK\"};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// import Input from \"../../Input/Input\";\nimport classes from \"./ModalContent.module.css\";\n\nconst ModalContent = props => {\n  return ReactDOM.createPortal(\n    <aside\n      className={classes.ModalCover}\n      onClick={event => {\n        if (event.target.className === classes.ModalCover) {\n          props.closeModal();\n        }\n      }}\n    >\n      <div className={classes.ModalArea}>\n        <div className={classes.ModalClose} onClick={props.closeModal}>\n          X\n        </div>\n\n        <div className={classes.ModalBody}>{props.children}</div>\n      </div>\n    </aside>,\n    document.body\n  );\n};\n\nexport default ModalContent;\n","import React, { Fragment, Component } from \"react\";\nimport ModalContent from \"./ModalContent/ModelContent\";\n\nclass Modal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShown: false\n    };\n  }\n\n  showModal = () => {\n    this.setState({ isShown: true });\n  };\n\n  closeModal = () => {\n    this.setState({ isShown: false });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <button onClick={this.showModal}>{this.props.buttonText}</button>\n\n        {this.state.isShown ? (\n          <ModalContent\n            closeModal={this.closeModal}\n            addNewBook={this.props.addNewBook}\n          >\n            <form\n              onSubmit={event => {\n                this.props.addNewBook(event);\n                this.closeModal();\n              }}\n            >\n              {this.props.children}\n            </form>\n          </ModalContent>\n        ) : (\n          <Fragment />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst input = props => {\n  let inputElement = null;\n\n  switch (props.inputtype) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={classes.InputEle}\n          id={props.id}\n          type={props.type}\n          name={props.name}\n          placeholder={props.placeholder}\n          min={props.min}\n          required\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={classes.InputEle}\n          id={props.id}\n          type={props.type}\n          name={props.name}\n          required\n        >\n          {props.options.map(option => {\n            return (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            );\n          })}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={classes.InputEle}\n          id={props.id}\n          type={props.type}\n          name={props.name}\n          placeholder={props.placeholder}\n          required\n        />\n      );\n  }\n\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label} htmlFor={props.id}>\n        {props.label}\n      </label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default input;\n","import React from \"react\";\nimport Modal from \"../Modal/Modal\";\nimport Input from \"../Input/Input\";\nimport classes from \"./Header.module.css\";\n\nconst header = props => {\n  return (\n    <header className={classes.Header}>\n      <h1>My Library</h1>\n      <Modal buttonText=\"Add New Book\" addNewBook={props.addNewBook}>\n        <Input\n          inputtype=\"input\"\n          id=\"title\"\n          label=\"Title\"\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          required\n        />\n\n        <Input\n          inputtype=\"input\"\n          id=\"author\"\n          label=\"Author\"\n          type=\"text\"\n          name=\"author\"\n          placeholder=\"Author\"\n          required\n        />\n\n        <Input\n          inputtype=\"input\"\n          id=\"no-of-pages\"\n          label=\"No of pages\"\n          type=\"number\"\n          name=\"no-of-pages\"\n          placeholder=\"No of pages\"\n          required\n          min=\"1\"\n        />\n\n        <Input\n          inputtype=\"select\"\n          id=\"read-status\"\n          label=\"Read Status\"\n          name=\"read-status\"\n          options={[\"Read\", \"Not Read Yet\"]}\n        />\n\n        <button className={classes.SubmitBtn} type=\"submit\">\n          Add Book\n        </button>\n      </Modal>\n    </header>\n  );\n};\n\nexport default header;\n","import React from \"react\";\nimport classes from \"./Book.module.css\";\n\nconst Book = props => {\n  return (\n    <tr>\n      <td>{props.title}</td>\n      <td>{props.author}</td>\n      <td>{props.pages}</td>\n      <td>{props.read}</td>\n      <td>\n        <button onClick={props.changeReadStatusHandler}>\n          Change Read Status\n        </button>\n      </td>\n      <td>\n        <button onClick={props.removeBookHandler} className={classes.RemoveBtn}>\n          Remove\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default Book;\n","import React from \"react\";\nimport Book from \"./Book/Book\";\n\nconst Books = props => {\n  return props.books.map((book, index) => {\n    return (\n      <Book\n        key={book.id}\n        title={book.title}\n        author={book.author}\n        pages={book.pages}\n        read={book.read}\n        changeReadStatusHandler={() => props.changeReadStatusHandler(book.id)}\n        removeBookHandler={() => props.removeBookHandler(book.id)}\n      />\n    );\n  });\n};\n\nexport default Books;\n","import React from \"react\";\nimport Books from \"./Books/Books\";\nimport classes from \"./Library.module.css\";\n\nconst library = props => {\n  return (\n    <table className={classes.Library}>\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Author</th>\n          <th>Pages</th>\n          <th>Read</th>\n          <th>Change Read Status</th>\n          <th>Remove Book</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <Books\n          books={props.books}\n          changeReadStatusHandler={props.changeReadStatusHandler}\n          removeBookHandler={props.removeBookHandler}\n        />\n      </tbody>\n    </table>\n  );\n};\n\nexport default library;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header/Header\";\nimport Library from \"./Library/Library\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      books: [\n        {\n          id: 0,\n          title: \"The Hobbit\",\n          author: \"J.R.R. Tolkien\",\n          pages: 295,\n          read: \"Not Read Yet\"\n        },\n        {\n          id: 1,\n          title: \"The 48 Laws of Power\",\n          author: \"Robert Greene\",\n          pages: 480,\n          read: \"Not Read Yet\"\n        },\n        {\n          id: 2,\n          title: \"The Prince\",\n          author: \"Niccolo Machiavelli\",\n          pages: 112,\n          read: \"Not Read Yet\"\n        },\n        {\n          id: 3,\n          title: \"Tides of War\",\n          author: \"Steven Pressfield\",\n          pages: 448,\n          read: \"Not Read Yet\"\n        }\n      ]\n    };\n  }\n\n  addNewBookHandler = event => {\n    event.preventDefault();\n    const books = [...this.state.books];\n    const nextBookId = books.length !== 0 ? books[books.length - 1].id + 1 : 0;\n\n    books.push({\n      id: nextBookId,\n      title: event.target[0].value,\n      author: event.target[1].value,\n      pages: event.target[2].valueAsNumber,\n      read: event.target[3].value\n    });\n\n    this.setState({ books: books });\n  };\n\n  changeReadStatusHandler = booksId => {\n    const bookIndex = this.state.books.findIndex(b => {\n      return b.id === booksId;\n    });\n\n    const book = Object.assign({}, this.state.books[bookIndex]);\n\n    book.read = book.read === \"Read\" ? \"Not Read Yet\" : \"Read\";\n\n    const books = this.state.books.slice();\n\n    books[bookIndex] = book;\n\n    this.setState({ books: books });\n  };\n\n  removeBookHandler = booksId => {\n    const books = this.state.books.slice();\n    books.splice(booksId, 1);\n    this.setState({ books: books });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header addNewBook={this.addNewBookHandler.bind(this)} />\n        <Library\n          books={this.state.books}\n          changeReadStatusHandler={this.changeReadStatusHandler.bind(this)}\n          removeBookHandler={this.removeBookHandler.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}